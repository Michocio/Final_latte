-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.0 from ParGrammar.y
-----------------------------------------------------------------------------

state 44 contains 1 shift/reduce conflicts.
state 74 contains 1 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 75 contains 1 shift/reduce conflicts.
state 126 contains 1 shift/reduce conflicts.
state 162 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> ClassHeader ClassBlock                   (6)
	ListTopDef -> TopDef                               (7)
	ListTopDef -> TopDef ListTopDef                    (8)
	Arg -> Type Ident                                  (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	LValue -> Ident                                    (13)
	LValue -> Ident '[' Expr ']'                       (14)
	LValue -> LValue1                                  (15)
	LValue2 -> LValue '.' LValue                       (16)
	LValue2 -> LValue3                                 (17)
	LValue1 -> LValue2                                 (18)
	LValue3 -> '(' LValue ')'                          (19)
	Block -> '{' ListStmt '}'                          (20)
	ListStmt ->                                        (21)
	ListStmt -> ListStmt Stmt                          (22)
	Stmt -> ';'                                        (23)
	Stmt -> Block                                      (24)
	Stmt -> Type ListItem ';'                          (25)
	Stmt -> LValue '=' Expr ';'                        (26)
	Stmt -> LValue '++' ';'                            (27)
	Stmt -> LValue '--' ';'                            (28)
	Stmt -> 'return' Expr ';'                          (29)
	Stmt -> 'return' ';'                               (30)
	Stmt -> 'if' '(' Expr ')' Stmt                     (31)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (32)
	Stmt -> 'while' '(' Expr ')' Stmt                  (33)
	Stmt -> 'for' '(' Type Ident ':' Ident ')' Stmt    (34)
	Stmt -> Expr ';'                                   (35)
	Item -> Ident                                      (36)
	Item -> Ident '=' Expr                             (37)
	ListItem -> Item                                   (38)
	ListItem -> Item ',' ListItem                      (39)
	Type -> Ident                                      (40)
	Type -> 'int'                                      (41)
	Type -> 'string'                                   (42)
	Type -> 'boolean'                                  (43)
	Type -> 'void'                                     (44)
	Type -> Type '[]'                                  (45)
	ClassHeader -> 'class' Ident                       (46)
	ClassHeader -> 'class' Ident 'extends' Ident       (47)
	ClassBlock -> '{' ListClassStmt '}'                (48)
	ListClassStmt ->                                   (49)
	ListClassStmt -> ListClassStmt ClassStmt           (50)
	ClassStmt -> Type ListItem ';'                     (51)
	ClassStmt -> Type Ident '(' ListArg ')' Block      (52)
	Expr6 -> LValue                                    (53)
	Expr6 -> 'new' Type                                (54)
	Expr6 -> 'new' Type '[' Expr ']'                   (55)
	Expr6 -> '(' Type ')' 'null'                       (56)
	Expr6 -> Integer                                   (57)
	Expr6 -> 'true'                                    (58)
	Expr6 -> 'false'                                   (59)
	Expr6 -> Ident '.' Ident '(' ListExpr ')'          (60)
	Expr6 -> Ident '.' 'length'                        (61)
	Expr6 -> String                                    (62)
	Expr6 -> Expr7                                     (63)
	Expr7 -> Ident '(' ListExpr ')'                    (64)
	Expr7 -> Expr8                                     (65)
	Expr5 -> '-' Expr6                                 (66)
	Expr5 -> '!' Expr6                                 (67)
	Expr5 -> Expr6                                     (68)
	Expr4 -> Expr4 MulOp Expr5                         (69)
	Expr4 -> Expr5                                     (70)
	Expr3 -> Expr3 AddOp Expr4                         (71)
	Expr3 -> Expr4                                     (72)
	Expr2 -> Expr2 RelOp Expr3                         (73)
	Expr2 -> Expr3                                     (74)
	Expr1 -> Expr2 '&&' Expr1                          (75)
	Expr1 -> Expr2                                     (76)
	Expr -> Expr1 '||' Expr                            (77)
	Expr -> Expr1                                      (78)
	Expr8 -> '(' Expr ')'                              (79)
	ListExpr ->                                        (80)
	ListExpr -> Expr                                   (81)
	ListExpr -> Expr ',' ListExpr                      (82)
	AddOp -> '+'                                       (83)
	AddOp -> '-'                                       (84)
	MulOp -> '*'                                       (85)
	MulOp -> '/'                                       (86)
	MulOp -> '%'                                       (87)
	RelOp -> '<'                                       (88)
	RelOp -> '<='                                      (89)
	RelOp -> '>'                                       (90)
	RelOp -> '>='                                      (91)
	RelOp -> '=='                                      (92)
	RelOp -> '!='                                      (93)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'[]'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'class'        { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'extends'      { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'for'          { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'int'          { PT _ (TS _ 33) }
	'length'       { PT _ (TS _ 34) }
	'new'          { PT _ (TS _ 35) }
	'null'         { PT _ (TS _ 36) }
	'return'       { PT _ (TS _ 37) }
	'string'       { PT _ (TS _ 38) }
	'true'         { PT _ (TS _ 39) }
	'void'         { PT _ (TS _ 40) }
	'while'        { PT _ (TS _ 41) }
	'{'            { PT _ (TS _ 42) }
	'||'           { PT _ (TS _ 43) }
	'}'            { PT _ (TS _ 44) }
	L_ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6
	ListTopDef      rules 7, 8
	Arg             rule  9
	ListArg         rules 10, 11, 12
	LValue          rules 13, 14, 15
	LValue2         rules 16, 17
	LValue1         rule  18
	LValue3         rule  19
	Block           rule  20
	ListStmt        rules 21, 22
	Stmt            rules 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
	Item            rules 36, 37
	ListItem        rules 38, 39
	Type            rules 40, 41, 42, 43, 44, 45
	ClassHeader     rules 46, 47
	ClassBlock      rule  48
	ListClassStmt   rules 49, 50
	ClassStmt       rules 51, 52
	Expr6           rules 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63
	Expr7           rules 64, 65
	Expr5           rules 66, 67, 68
	Expr4           rules 69, 70
	Expr3           rules 71, 72
	Expr2           rules 73, 74
	Expr1           rules 75, 76
	Expr            rules 77, 78
	Expr8           rule  79
	ListExpr        rules 80, 81, 82
	AddOp           rules 83, 84
	MulOp           rules 85, 86, 87
	RelOp           rules 88, 89, 90, 91, 92, 93

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 9
	'class'        shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7
	ClassHeader    goto state 8

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            reduce using rule 40
	'[]'           reduce using rule 40
	']'            reduce using rule 40
	'||'           reduce using rule 40
	L_ident        reduce using rule 40


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 7)
	ListTopDef -> TopDef . ListTopDef                   (rule 8)

	'boolean'      shift, and enter state 9
	'class'        shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2
	%eof           reduce using rule 7

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 19
	Type           goto state 7
	ClassHeader    goto state 8

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type -> Type . '[]'                                 (rule 45)

	'[]'           shift, and enter state 18
	L_ident        shift, and enter state 2

	Ident          goto state 17

State 8

	TopDef -> ClassHeader . ClassBlock                  (rule 6)

	'{'            shift, and enter state 16

	ClassBlock     goto state 15

State 9

	Type -> 'boolean' .                                 (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43
	L_ident        reduce using rule 43


State 10

	ClassHeader -> 'class' . Ident                      (rule 46)
	ClassHeader -> 'class' . Ident 'extends' Ident      (rule 47)

	L_ident        shift, and enter state 2

	Ident          goto state 14

State 11

	Type -> 'int' .                                     (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41
	L_ident        reduce using rule 41


State 12

	Type -> 'string' .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42
	L_ident        reduce using rule 42


State 13

	Type -> 'void' .                                    (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'['            reduce using rule 44
	'[]'           reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44
	L_ident        reduce using rule 44


State 14

	ClassHeader -> 'class' Ident .                      (rule 46)
	ClassHeader -> 'class' Ident . 'extends' Ident      (rule 47)

	'extends'      shift, and enter state 22
	'{'            reduce using rule 46


State 15

	TopDef -> ClassHeader ClassBlock .                  (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_ident        reduce using rule 6
	%eof           reduce using rule 6


State 16

	ClassBlock -> '{' . ListClassStmt '}'               (rule 48)

	'boolean'      reduce using rule 49
	'int'          reduce using rule 49
	'string'       reduce using rule 49
	'void'         reduce using rule 49
	'}'            reduce using rule 49
	L_ident        reduce using rule 49

	ListClassStmt  goto state 21

State 17

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 20


State 18

	Type -> Type '[]' .                                 (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'['            reduce using rule 45
	'[]'           reduce using rule 45
	']'            reduce using rule 45
	'||'           reduce using rule 45
	L_ident        reduce using rule 45


State 19

	ListTopDef -> TopDef ListTopDef .                   (rule 8)

	%eof           reduce using rule 8


State 20

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 27
	ListArg        goto state 28
	Type           goto state 29

State 21

	ClassBlock -> '{' ListClassStmt . '}'               (rule 48)
	ListClassStmt -> ListClassStmt . ClassStmt          (rule 50)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	'}'            shift, and enter state 26
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 24
	ClassStmt      goto state 25

State 22

	ClassHeader -> 'class' Ident 'extends' . Ident      (rule 47)

	L_ident        shift, and enter state 2

	Ident          goto state 23

State 23

	ClassHeader -> 'class' Ident 'extends' Ident .      (rule 47)

	'{'            reduce using rule 47


State 24

	Type -> Type . '[]'                                 (rule 45)
	ClassStmt -> Type . ListItem ';'                    (rule 51)
	ClassStmt -> Type . Ident '(' ListArg ')' Block     (rule 52)

	'[]'           shift, and enter state 18
	L_ident        shift, and enter state 2

	Ident          goto state 33
	Item           goto state 34
	ListItem       goto state 35

State 25

	ListClassStmt -> ListClassStmt ClassStmt .          (rule 50)

	'boolean'      reduce using rule 50
	'int'          reduce using rule 50
	'string'       reduce using rule 50
	'void'         reduce using rule 50
	'}'            reduce using rule 50
	L_ident        reduce using rule 50


State 26

	ClassBlock -> '{' ListClassStmt '}' .               (rule 48)

	'boolean'      reduce using rule 48
	'class'        reduce using rule 48
	'int'          reduce using rule 48
	'string'       reduce using rule 48
	'void'         reduce using rule 48
	L_ident        reduce using rule 48
	%eof           reduce using rule 48


State 27

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 32


State 28

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 31


State 29

	Arg -> Type . Ident                                 (rule 9)
	Type -> Type . '[]'                                 (rule 45)

	'[]'           shift, and enter state 18
	L_ident        shift, and enter state 2

	Ident          goto state 30

State 30

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 31

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 42

	Block          goto state 41

State 32

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 27
	ListArg        goto state 40
	Type           goto state 29

State 33

	Item -> Ident .                                     (rule 36)
	Item -> Ident . '=' Expr                            (rule 37)
	ClassStmt -> Type Ident . '(' ListArg ')' Block     (rule 52)

	'('            shift, and enter state 38
	','            reduce using rule 36
	';'            reduce using rule 36
	'='            shift, and enter state 39


State 34

	ListItem -> Item .                                  (rule 38)
	ListItem -> Item . ',' ListItem                     (rule 39)

	','            shift, and enter state 37
	';'            reduce using rule 38


State 35

	ClassStmt -> Type ListItem . ';'                    (rule 51)

	';'            shift, and enter state 36


State 36

	ClassStmt -> Type ListItem ';' .                    (rule 51)

	'boolean'      reduce using rule 51
	'int'          reduce using rule 51
	'string'       reduce using rule 51
	'void'         reduce using rule 51
	'}'            reduce using rule 51
	L_ident        reduce using rule 51


State 37

	ListItem -> Item ',' . ListItem                     (rule 39)

	L_ident        shift, and enter state 2

	Ident          goto state 69
	Item           goto state 34
	ListItem       goto state 70

State 38

	ClassStmt -> Type Ident '(' . ListArg ')' Block     (rule 52)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 27
	ListArg        goto state 68
	Type           goto state 29

State 39

	Item -> Ident '=' . Expr                            (rule 37)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58
	Expr8          goto state 59

State 40

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 41

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_ident        reduce using rule 5
	%eof           reduce using rule 5


State 42

	Block -> '{' . ListStmt '}'                         (rule 20)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21

	ListStmt       goto state 43

State 43

	Block -> '{' ListStmt . '}'                         (rule 20)
	ListStmt -> ListStmt . Stmt                         (rule 22)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 104
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 63
	'for'          shift, and enter state 105
	'if'           shift, and enter state 106
	'int'          shift, and enter state 11
	'new'          shift, and enter state 64
	'return'       shift, and enter state 107
	'string'       shift, and enter state 12
	'true'         shift, and enter state 65
	'void'         shift, and enter state 13
	'while'        shift, and enter state 108
	'{'            shift, and enter state 42
	'}'            shift, and enter state 109
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 74
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 99
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Block          goto state 100
	Stmt           goto state 101
	Type           goto state 102
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 103
	Expr8          goto state 59

State 44

	LValue -> Ident .                                   (rule 13)
	LValue -> Ident . '[' Expr ']'                      (rule 14)
	Expr6 -> Ident . '.' Ident '(' ListExpr ')'         (rule 60)
	Expr6 -> Ident . '.' 'length'                       (rule 61)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 64)

	'!='           reduce using rule 13
	'%'            reduce using rule 13
	'&&'           reduce using rule 13
	'('            shift, and enter state 96
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	','            reduce using rule 13
	'-'            reduce using rule 13
	'.'            shift, and enter state 97
			(reduce using rule 13)

	'/'            reduce using rule 13
	';'            reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'=='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'['            shift, and enter state 98
	']'            reduce using rule 13
	'||'           reduce using rule 13


State 45

	Expr6 -> Integer .                                  (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 46

	Expr6 -> String .                                   (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 47

	LValue2 -> LValue . '.' LValue                      (rule 16)
	Expr6 -> LValue .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'.'            shift, and enter state 95
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 48

	LValue1 -> LValue2 .                                (rule 18)

	'!='           reduce using rule 18
	'%'            reduce using rule 18
	'&&'           reduce using rule 18
	')'            reduce using rule 18
	'*'            reduce using rule 18
	'+'            reduce using rule 18
	'++'           reduce using rule 18
	','            reduce using rule 18
	'-'            reduce using rule 18
	'--'           reduce using rule 18
	'.'            reduce using rule 18
	'/'            reduce using rule 18
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'='            reduce using rule 18
	'=='           reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	']'            reduce using rule 18
	'||'           reduce using rule 18


State 49

	LValue -> LValue1 .                                 (rule 15)

	'!='           reduce using rule 15
	'%'            reduce using rule 15
	'&&'           reduce using rule 15
	')'            reduce using rule 15
	'*'            reduce using rule 15
	'+'            reduce using rule 15
	'++'           reduce using rule 15
	','            reduce using rule 15
	'-'            reduce using rule 15
	'--'           reduce using rule 15
	'.'            reduce using rule 15
	'/'            reduce using rule 15
	';'            reduce using rule 15
	'<'            reduce using rule 15
	'<='           reduce using rule 15
	'='            reduce using rule 15
	'=='           reduce using rule 15
	'>'            reduce using rule 15
	'>='           reduce using rule 15
	']'            reduce using rule 15
	'||'           reduce using rule 15


State 50

	LValue2 -> LValue3 .                                (rule 17)

	'!='           reduce using rule 17
	'%'            reduce using rule 17
	'&&'           reduce using rule 17
	')'            reduce using rule 17
	'*'            reduce using rule 17
	'+'            reduce using rule 17
	'++'           reduce using rule 17
	','            reduce using rule 17
	'-'            reduce using rule 17
	'--'           reduce using rule 17
	'.'            reduce using rule 17
	'/'            reduce using rule 17
	';'            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'='            reduce using rule 17
	'=='           reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	']'            reduce using rule 17
	'||'           reduce using rule 17


State 51

	Expr5 -> Expr6 .                                    (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68


State 52

	Expr6 -> Expr7 .                                    (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 53

	Expr4 -> Expr5 .                                    (rule 70)

	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70


State 54

	Expr4 -> Expr4 . MulOp Expr5                        (rule 69)
	Expr3 -> Expr4 .                                    (rule 72)

	'!='           reduce using rule 72
	'%'            shift, and enter state 92
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'*'            shift, and enter state 93
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'/'            shift, and enter state 94
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'||'           reduce using rule 72

	MulOp          goto state 91

State 55

	Expr3 -> Expr3 . AddOp Expr4                        (rule 71)
	Expr2 -> Expr3 .                                    (rule 74)

	'!='           reduce using rule 74
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	'+'            shift, and enter state 89
	','            reduce using rule 74
	'-'            shift, and enter state 90
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	']'            reduce using rule 74
	'||'           reduce using rule 74

	AddOp          goto state 88

State 56

	Expr2 -> Expr2 . RelOp Expr3                        (rule 73)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 75)
	Expr1 -> Expr2 .                                    (rule 76)

	'!='           shift, and enter state 81
	'&&'           shift, and enter state 82
	')'            reduce using rule 76
	','            reduce using rule 76
	';'            reduce using rule 76
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'=='           shift, and enter state 85
	'>'            shift, and enter state 86
	'>='           shift, and enter state 87
	']'            reduce using rule 76
	'||'           reduce using rule 76

	RelOp          goto state 80

State 57

	Expr -> Expr1 . '||' Expr                           (rule 77)
	Expr -> Expr1 .                                     (rule 78)

	')'            reduce using rule 78
	','            reduce using rule 78
	';'            reduce using rule 78
	']'            reduce using rule 78
	'||'           shift, and enter state 79


State 58

	Item -> Ident '=' Expr .                            (rule 37)

	','            reduce using rule 37
	';'            reduce using rule 37


State 59

	Expr7 -> Expr8 .                                    (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 60

	Expr5 -> '!' . Expr6                                (rule 67)

	'('            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 78
	Expr7          goto state 52
	Expr8          goto state 59

State 61

	LValue3 -> '(' . LValue ')'                         (rule 19)
	Expr6 -> '(' . Type ')' 'null'                      (rule 56)
	Expr8 -> '(' . Expr ')'                             (rule 79)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 63
	'int'          shift, and enter state 11
	'new'          shift, and enter state 64
	'string'       shift, and enter state 12
	'true'         shift, and enter state 65
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 74
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 75
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Type           goto state 76
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 77
	Expr8          goto state 59

State 62

	Expr5 -> '-' . Expr6                                (rule 66)

	'('            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 73
	Expr7          goto state 52
	Expr8          goto state 59

State 63

	Expr6 -> 'false' .                                  (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 64

	Expr6 -> 'new' . Type                               (rule 54)
	Expr6 -> 'new' . Type '[' Expr ']'                  (rule 55)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 72

State 65

	Expr6 -> 'true' .                                   (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 66

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 67

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 68

	ClassStmt -> Type Ident '(' ListArg . ')' Block     (rule 52)

	')'            shift, and enter state 71


State 69

	Item -> Ident .                                     (rule 36)
	Item -> Ident . '=' Expr                            (rule 37)

	','            reduce using rule 36
	';'            reduce using rule 36
	'='            shift, and enter state 39


State 70

	ListItem -> Item ',' ListItem .                     (rule 39)

	';'            reduce using rule 39


State 71

	ClassStmt -> Type Ident '(' ListArg ')' . Block     (rule 52)

	'{'            shift, and enter state 42

	Block          goto state 137

State 72

	Type -> Type . '[]'                                 (rule 45)
	Expr6 -> 'new' Type .                               (rule 54)
	Expr6 -> 'new' Type . '[' Expr ']'                  (rule 55)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            shift, and enter state 136
	'[]'           shift, and enter state 18
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 73

	Expr5 -> '-' Expr6 .                                (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 74

	LValue -> Ident .                                   (rule 13)
	LValue -> Ident . '[' Expr ']'                      (rule 14)
	Type -> Ident .                                     (rule 40)
	Expr6 -> Ident . '.' Ident '(' ListExpr ')'         (rule 60)
	Expr6 -> Ident . '.' 'length'                       (rule 61)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 64)

	'!='           reduce using rule 13
	'%'            reduce using rule 13
	'&&'           reduce using rule 13
	'('            shift, and enter state 96
	')'            reduce using rule 40
			(reduce using rule 13)

	'*'            reduce using rule 13
	'+'            reduce using rule 13
	'++'           reduce using rule 13
	'-'            reduce using rule 13
	'--'           reduce using rule 13
	'.'            shift, and enter state 97
			(reduce using rule 13)

	'/'            reduce using rule 13
	';'            reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'='            reduce using rule 13
	'=='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'['            shift, and enter state 98
	'[]'           reduce using rule 40
	'||'           reduce using rule 13
	L_ident        reduce using rule 40


State 75

	LValue2 -> LValue . '.' LValue                      (rule 16)
	LValue3 -> '(' LValue . ')'                         (rule 19)
	Expr6 -> LValue .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            shift, and enter state 135
			(reduce using rule 53)

	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'.'            shift, and enter state 95
	'/'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 76

	Type -> Type . '[]'                                 (rule 45)
	Expr6 -> '(' Type . ')' 'null'                      (rule 56)

	')'            shift, and enter state 134
	'[]'           shift, and enter state 18


State 77

	Expr8 -> '(' Expr . ')'                             (rule 79)

	')'            shift, and enter state 133


State 78

	Expr5 -> '!' Expr6 .                                (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67


State 79

	Expr -> Expr1 '||' . Expr                           (rule 77)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 132
	Expr8          goto state 59

State 80

	Expr2 -> Expr2 RelOp . Expr3                        (rule 73)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 131
	Expr8          goto state 59

State 81

	RelOp -> '!=' .                                     (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'-'            reduce using rule 93
	'false'        reduce using rule 93
	'new'          reduce using rule 93
	'true'         reduce using rule 93
	L_ident        reduce using rule 93
	L_integ        reduce using rule 93
	L_quoted       reduce using rule 93


State 82

	Expr1 -> Expr2 '&&' . Expr1                         (rule 75)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 130
	Expr8          goto state 59

State 83

	RelOp -> '<' .                                      (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'new'          reduce using rule 88
	'true'         reduce using rule 88
	L_ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 84

	RelOp -> '<=' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'new'          reduce using rule 89
	'true'         reduce using rule 89
	L_ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 85

	RelOp -> '==' .                                     (rule 92)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'-'            reduce using rule 92
	'false'        reduce using rule 92
	'new'          reduce using rule 92
	'true'         reduce using rule 92
	L_ident        reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92


State 86

	RelOp -> '>' .                                      (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'new'          reduce using rule 90
	'true'         reduce using rule 90
	L_ident        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 87

	RelOp -> '>=' .                                     (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'-'            reduce using rule 91
	'false'        reduce using rule 91
	'new'          reduce using rule 91
	'true'         reduce using rule 91
	L_ident        reduce using rule 91
	L_integ        reduce using rule 91
	L_quoted       reduce using rule 91


State 88

	Expr3 -> Expr3 AddOp . Expr4                        (rule 71)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 129
	Expr8          goto state 59

State 89

	AddOp -> '+' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 90

	AddOp -> '-' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 91

	Expr4 -> Expr4 MulOp . Expr5                        (rule 69)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 128
	Expr8          goto state 59

State 92

	MulOp -> '%' .                                      (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'true'         reduce using rule 87
	L_ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 93

	MulOp -> '*' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 94

	MulOp -> '/' .                                      (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 95

	LValue2 -> LValue '.' . LValue                      (rule 16)

	'('            shift, and enter state 127
	L_ident        shift, and enter state 2

	Ident          goto state 125
	LValue         goto state 126
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50

State 96

	Expr7 -> Ident '(' . ListExpr ')'                   (rule 64)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	')'            reduce using rule 80
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 123
	Expr8          goto state 59
	ListExpr       goto state 124

State 97

	Expr6 -> Ident '.' . Ident '(' ListExpr ')'         (rule 60)
	Expr6 -> Ident '.' . 'length'                       (rule 61)

	'length'       shift, and enter state 122
	L_ident        shift, and enter state 2

	Ident          goto state 121

State 98

	LValue -> Ident '[' . Expr ']'                      (rule 14)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 120
	Expr8          goto state 59

State 99

	LValue2 -> LValue . '.' LValue                      (rule 16)
	Stmt -> LValue . '=' Expr ';'                       (rule 26)
	Stmt -> LValue . '++' ';'                           (rule 27)
	Stmt -> LValue . '--' ';'                           (rule 28)
	Expr6 -> LValue .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'++'           shift, and enter state 117
	'-'            reduce using rule 53
	'--'           shift, and enter state 118
	'.'            shift, and enter state 95
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            shift, and enter state 119
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 100

	Stmt -> Block .                                     (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 101

	ListStmt -> ListStmt Stmt .                         (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 102

	Stmt -> Type . ListItem ';'                         (rule 25)
	Type -> Type . '[]'                                 (rule 45)

	'[]'           shift, and enter state 18
	L_ident        shift, and enter state 2

	Ident          goto state 69
	Item           goto state 34
	ListItem       goto state 116

State 103

	Stmt -> Expr . ';'                                  (rule 35)

	';'            shift, and enter state 115


State 104

	Stmt -> ';' .                                       (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 105

	Stmt -> 'for' . '(' Type Ident ':' Ident ')' Stmt    (rule 34)

	'('            shift, and enter state 114


State 106

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 31)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 32)

	'('            shift, and enter state 113


State 107

	Stmt -> 'return' . Expr ';'                         (rule 29)
	Stmt -> 'return' . ';'                              (rule 30)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 112
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 111
	Expr8          goto state 59

State 108

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 33)

	'('            shift, and enter state 110


State 109

	Block -> '{' ListStmt '}' .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'class'        reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 110

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 33)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 152
	Expr8          goto state 59

State 111

	Stmt -> 'return' Expr . ';'                         (rule 29)

	';'            shift, and enter state 151


State 112

	Stmt -> 'return' ';' .                              (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 113

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 31)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 32)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 150
	Expr8          goto state 59

State 114

	Stmt -> 'for' '(' . Type Ident ':' Ident ')' Stmt    (rule 34)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 149

State 115

	Stmt -> Expr ';' .                                  (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'boolean'      reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'for'          reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'new'          reduce using rule 35
	'return'       reduce using rule 35
	'string'       reduce using rule 35
	'true'         reduce using rule 35
	'void'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35


State 116

	Stmt -> Type ListItem . ';'                         (rule 25)

	';'            shift, and enter state 148


State 117

	Stmt -> LValue '++' . ';'                           (rule 27)

	';'            shift, and enter state 147


State 118

	Stmt -> LValue '--' . ';'                           (rule 28)

	';'            shift, and enter state 146


State 119

	Stmt -> LValue '=' . Expr ';'                       (rule 26)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 145
	Expr8          goto state 59

State 120

	LValue -> Ident '[' Expr . ']'                      (rule 14)

	']'            shift, and enter state 144


State 121

	Expr6 -> Ident '.' Ident . '(' ListExpr ')'         (rule 60)

	'('            shift, and enter state 143


State 122

	Expr6 -> Ident '.' 'length' .                       (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 123

	ListExpr -> Expr .                                  (rule 81)
	ListExpr -> Expr . ',' ListExpr                     (rule 82)

	')'            reduce using rule 81
	','            shift, and enter state 142


State 124

	Expr7 -> Ident '(' ListExpr . ')'                   (rule 64)

	')'            shift, and enter state 141


State 125

	LValue -> Ident .                                   (rule 13)
	LValue -> Ident . '[' Expr ']'                      (rule 14)

	'!='           reduce using rule 13
	'%'            reduce using rule 13
	'&&'           reduce using rule 13
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	'++'           reduce using rule 13
	','            reduce using rule 13
	'-'            reduce using rule 13
	'--'           reduce using rule 13
	'.'            reduce using rule 13
	'/'            reduce using rule 13
	';'            reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'='            reduce using rule 13
	'=='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'['            shift, and enter state 98
	']'            reduce using rule 13
	'||'           reduce using rule 13


State 126

	LValue2 -> LValue . '.' LValue                      (rule 16)
	LValue2 -> LValue '.' LValue .                      (rule 16)

	'!='           reduce using rule 16
	'%'            reduce using rule 16
	'&&'           reduce using rule 16
	')'            reduce using rule 16
	'*'            reduce using rule 16
	'+'            reduce using rule 16
	'++'           reduce using rule 16
	','            reduce using rule 16
	'-'            reduce using rule 16
	'--'           reduce using rule 16
	'.'            shift, and enter state 95
			(reduce using rule 16)

	'/'            reduce using rule 16
	';'            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'='            reduce using rule 16
	'=='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	']'            reduce using rule 16
	'||'           reduce using rule 16


State 127

	LValue3 -> '(' . LValue ')'                         (rule 19)

	'('            shift, and enter state 127
	L_ident        shift, and enter state 2

	Ident          goto state 125
	LValue         goto state 140
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50

State 128

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69


State 129

	Expr4 -> Expr4 . MulOp Expr5                        (rule 69)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 71)

	'!='           reduce using rule 71
	'%'            shift, and enter state 92
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'*'            shift, and enter state 93
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'/'            shift, and enter state 94
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71

	MulOp          goto state 91

State 130

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75
	']'            reduce using rule 75
	'||'           reduce using rule 75


State 131

	Expr3 -> Expr3 . AddOp Expr4                        (rule 71)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 73)

	'!='           reduce using rule 73
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	'+'            shift, and enter state 89
	','            reduce using rule 73
	'-'            shift, and enter state 90
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	']'            reduce using rule 73
	'||'           reduce using rule 73

	AddOp          goto state 88

State 132

	Expr -> Expr1 '||' Expr .                           (rule 77)

	')'            reduce using rule 77
	','            reduce using rule 77
	';'            reduce using rule 77
	']'            reduce using rule 77


State 133

	Expr8 -> '(' Expr ')' .                             (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&&'           reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'/'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	']'            reduce using rule 79
	'||'           reduce using rule 79


State 134

	Expr6 -> '(' Type ')' . 'null'                      (rule 56)

	'null'         shift, and enter state 139


State 135

	LValue3 -> '(' LValue ')' .                         (rule 19)

	'!='           reduce using rule 19
	'%'            reduce using rule 19
	'&&'           reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 19
	'+'            reduce using rule 19
	'++'           reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	'--'           reduce using rule 19
	'.'            reduce using rule 19
	'/'            reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	']'            reduce using rule 19
	'||'           reduce using rule 19


State 136

	Expr6 -> 'new' Type '[' . Expr ']'                  (rule 55)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 138
	Expr8          goto state 59

State 137

	ClassStmt -> Type Ident '(' ListArg ')' Block .     (rule 52)

	'boolean'      reduce using rule 52
	'int'          reduce using rule 52
	'string'       reduce using rule 52
	'void'         reduce using rule 52
	'}'            reduce using rule 52
	L_ident        reduce using rule 52


State 138

	Expr6 -> 'new' Type '[' Expr . ']'                  (rule 55)

	']'            shift, and enter state 159


State 139

	Expr6 -> '(' Type ')' 'null' .                      (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 140

	LValue2 -> LValue . '.' LValue                      (rule 16)
	LValue3 -> '(' LValue . ')'                         (rule 19)

	')'            shift, and enter state 135
	'.'            shift, and enter state 95


State 141

	Expr7 -> Ident '(' ListExpr ')' .                   (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 142

	ListExpr -> Expr ',' . ListExpr                     (rule 82)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	')'            reduce using rule 80
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 123
	Expr8          goto state 59
	ListExpr       goto state 158

State 143

	Expr6 -> Ident '.' Ident '(' . ListExpr ')'         (rule 60)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	')'            reduce using rule 80
	'-'            shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 64
	'true'         shift, and enter state 65
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 47
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 123
	Expr8          goto state 59
	ListExpr       goto state 157

State 144

	LValue -> Ident '[' Expr ']' .                      (rule 14)

	'!='           reduce using rule 14
	'%'            reduce using rule 14
	'&&'           reduce using rule 14
	')'            reduce using rule 14
	'*'            reduce using rule 14
	'+'            reduce using rule 14
	'++'           reduce using rule 14
	','            reduce using rule 14
	'-'            reduce using rule 14
	'--'           reduce using rule 14
	'.'            reduce using rule 14
	'/'            reduce using rule 14
	';'            reduce using rule 14
	'<'            reduce using rule 14
	'<='           reduce using rule 14
	'='            reduce using rule 14
	'=='           reduce using rule 14
	'>'            reduce using rule 14
	'>='           reduce using rule 14
	']'            reduce using rule 14
	'||'           reduce using rule 14


State 145

	Stmt -> LValue '=' Expr . ';'                       (rule 26)

	';'            shift, and enter state 156


State 146

	Stmt -> LValue '--' ';' .                           (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 147

	Stmt -> LValue '++' ';' .                           (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 148

	Stmt -> Type ListItem ';' .                         (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 149

	Stmt -> 'for' '(' Type . Ident ':' Ident ')' Stmt    (rule 34)
	Type -> Type . '[]'                                 (rule 45)

	'[]'           shift, and enter state 18
	L_ident        shift, and enter state 2

	Ident          goto state 155

State 150

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 31)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 32)

	')'            shift, and enter state 154


State 151

	Stmt -> 'return' Expr ';' .                         (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 152

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 33)

	')'            shift, and enter state 153


State 153

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 33)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 104
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 63
	'for'          shift, and enter state 105
	'if'           shift, and enter state 106
	'int'          shift, and enter state 11
	'new'          shift, and enter state 64
	'return'       shift, and enter state 107
	'string'       shift, and enter state 12
	'true'         shift, and enter state 65
	'void'         shift, and enter state 13
	'while'        shift, and enter state 108
	'{'            shift, and enter state 42
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 74
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 99
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Block          goto state 100
	Stmt           goto state 163
	Type           goto state 102
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 103
	Expr8          goto state 59

State 154

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 31)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 32)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 104
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 63
	'for'          shift, and enter state 105
	'if'           shift, and enter state 106
	'int'          shift, and enter state 11
	'new'          shift, and enter state 64
	'return'       shift, and enter state 107
	'string'       shift, and enter state 12
	'true'         shift, and enter state 65
	'void'         shift, and enter state 13
	'while'        shift, and enter state 108
	'{'            shift, and enter state 42
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 74
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 99
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Block          goto state 100
	Stmt           goto state 162
	Type           goto state 102
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 103
	Expr8          goto state 59

State 155

	Stmt -> 'for' '(' Type Ident . ':' Ident ')' Stmt    (rule 34)

	':'            shift, and enter state 161


State 156

	Stmt -> LValue '=' Expr ';' .                       (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 157

	Expr6 -> Ident '.' Ident '(' ListExpr . ')'         (rule 60)

	')'            shift, and enter state 160


State 158

	ListExpr -> Expr ',' ListExpr .                     (rule 82)

	')'            reduce using rule 82


State 159

	Expr6 -> 'new' Type '[' Expr ']' .                  (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 160

	Expr6 -> Ident '.' Ident '(' ListExpr ')' .         (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 161

	Stmt -> 'for' '(' Type Ident ':' . Ident ')' Stmt    (rule 34)

	L_ident        shift, and enter state 2

	Ident          goto state 165

State 162

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 31)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 32)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         shift, and enter state 164
			(reduce using rule 31)

	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 163

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 164

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 32)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 104
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 63
	'for'          shift, and enter state 105
	'if'           shift, and enter state 106
	'int'          shift, and enter state 11
	'new'          shift, and enter state 64
	'return'       shift, and enter state 107
	'string'       shift, and enter state 12
	'true'         shift, and enter state 65
	'void'         shift, and enter state 13
	'while'        shift, and enter state 108
	'{'            shift, and enter state 42
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 74
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 99
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Block          goto state 100
	Stmt           goto state 167
	Type           goto state 102
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 103
	Expr8          goto state 59

State 165

	Stmt -> 'for' '(' Type Ident ':' Ident . ')' Stmt    (rule 34)

	')'            shift, and enter state 166


State 166

	Stmt -> 'for' '(' Type Ident ':' Ident ')' . Stmt    (rule 34)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 104
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 63
	'for'          shift, and enter state 105
	'if'           shift, and enter state 106
	'int'          shift, and enter state 11
	'new'          shift, and enter state 64
	'return'       shift, and enter state 107
	'string'       shift, and enter state 12
	'true'         shift, and enter state 65
	'void'         shift, and enter state 13
	'while'        shift, and enter state 108
	'{'            shift, and enter state 42
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 74
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 99
	LValue2        goto state 48
	LValue1        goto state 49
	LValue3        goto state 50
	Block          goto state 100
	Stmt           goto state 168
	Type           goto state 102
	Expr6          goto state 51
	Expr7          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 103
	Expr8          goto state 59

State 167

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 168

	Stmt -> 'for' '(' Type Ident ':' Ident ')' Stmt .    (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'boolean'      reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'new'          reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 94
Number of terminals: 47
Number of non-terminals: 36
Number of states: 169
